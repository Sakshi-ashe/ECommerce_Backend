
spring.data.rest.base-path=/api

server.port= 1717








# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection url for the database "full-stack-ecommerce"
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/full-stack-ecommerce?useSSL=false&useUnicode=yes&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC

# Username and password
spring.datasource.username = root
spring.datasource.password = password

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1




allowed.origins = http://localhost:4200

spring.data.rest.detection-strategy= ANNOTATED


# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
#spring.jpa.show-sql = true


# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


################################..REASON WHY..#########################################
########################..ALREADY SET UP DATABASE TABLES..#########################################

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = update


#hibernate.hbm2ddl.auto Automatically validates or exports schema DDL to 
#the database when the SessionFactory is created
   # validate: validate the schema, makes no changes to the database.
   # update: update the schema.
   # create: creates the schema, destroying previous data.
   # create-drop: drop the schema when the SessionFactory is closed explicitly, typically when the application is stopped.
   # none: does nothing with the schema, makes no changes to the database




































#okta.oauth2.client-id=0oazqug8t0aEvjoBs5d6
#okta.oauth2.client-secret=qpUfAt4olpfU6YABskEQ8T2TFttseew8WJwsfYSW
#okta.oauth2.issuer=https://dev-76071753.okta.com/oauth2/default





